# .github/workflows/build.yaml
name: Build VirtualElevationRecipes desktop apps

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==6.4.*

      # ---------- SINGLE-LINE BUILD (no .spec) ----------
      - name: Build app with PyInstaller
        shell: bash                   # Windows runner will auto-convert
        run: |
          # pick the right icon for the current OS
          case "${{ runner.os }}" in
            macOS)   ICON=".assets/VirtualElevationRecipes.icns" ;;
            Windows) ICON=".assets/VirtualElevationRecipes.ico"  ;;
            Linux)   ICON="" ;;   # Linux ignores --icon; desktop files set it later
          esac

          pyinstaller --onefile --windowed --strip --clean \
                      ${ICON:+--icon="$ICON"} \
                      --name "VirtualElevationRecipes" \
                      main.py

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: VirtualElevationRecipes-${{ runner.os }}
          path: |
            dist/VirtualElevationRecipes*
          retention-days: 5 
          if-no-files-found: error

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist
          
      - name: Prepare release assets
        run: |
          mkdir -p release_files
          
          # Find and package artifacts by platform
          find dist -name "VirtualElevationRecipes*" | while read file; do
            platform=""
            if [[ "$file" == *"macOS"* ]]; then
              platform="macOS"
              # For macOS, zip the .app directory
              if [[ -d "$file" && "$file" == *.app ]]; then
                (cd $(dirname "$file") && zip -r "../../release_files/VirtualElevationRecipes-${platform}.zip" $(basename "$file"))
                continue
              fi
            elif [[ "$file" == *"Windows"* ]]; then
              platform="Windows"
            elif [[ "$file" == *"Linux"* ]]; then
              platform="Linux"
            else
              # Try to determine from file extension
              if [[ "$file" == *.exe ]]; then
                platform="Windows"
              elif [[ "$file" == *.AppImage ]]; then
                platform="Linux"
              fi
            fi
            
            # If it's a regular file, copy it with platform suffix
            if [[ -f "$file" ]]; then
              filename=$(basename "$file")
              cp "$file" "release_files/VirtualElevationRecipes-${platform}-${filename}"
            fi
          done
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: release_files/*
          generate_release_notes: true